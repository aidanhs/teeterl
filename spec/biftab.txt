#
#	lists
#

lists:reverse(List,Tail)			bif_reverse2
lists:keymember(Key,N,TupleList)	bif_keymember3
lists:keysearch(Key,N,TupleList)	bif_keysearch3
lists:last(List)					bif_last1
lists:member(Elem,List)				bif_member2

#
#	code
#

code:undefined_builtin()					bif_undefined_builtin0
code:embedded_module(Mod)					bif_embedded_module1
code:list_embedded()						bif_list_embedded0
code:load_module0(Mod,Exports,Preloaded)	bif_load_module0_3
code:is_loaded(Mod)							bif_is_loaded1
code:all_loaded()							bif_all_loaded0
code:spawn0(Mod,Fun,Args)					bif_spawn0_3
code:spawn0(F)								bif_spawn0_1
code:run_slice(Pid,Reductions)				bif_run_slice2
code:destroy_process(Pid)					bif_destroy_process1
code:poll_ports(Time)						bif_poll_ports1

code:delete(Mod)							bif_delete_module1
code:purge(Mod)								bif_purge1
code:soft_purge(Mod)						bif_soft_purge1

#
#	io
#

io:print_iolist(IOList)			bif_print_iolist1

#
#	erlang
#

erlang:display(Term)					bif_display1

erlang:send_msg0(Rcpt,Msg)				bif_send_msg0_2

erlang:make_fun(Name,Arity,FreeVars)	bif_make_fun3
erlang:fun_info(Fun)					bif_fun_info1
erlang:fun_info(Fun,What)				bif_fun_info2

erlang:size(TupleOrBin)					bif_size1
erlang:bit_size(Bin)					bif_bit_size1
erlang:element(N,Tuple)					bif_element2
erlang:setelement(N,Tuple,Value)		bif_setelement3

erlang:length(List)					bif_length1
erlang:tl(List)						bif_tl1
erlang:hd(List)						bif_hd1

erlang:float(Number)				bif_float1
erlang:round(Number)				bif_round1
erlang:trunc(Number)				bif_trunc1

erlang:atom_to_list(Atom)			bif_atom_to_list1
erlang:list_to_atom(Atom)			bif_list_to_atom1
erlang:split_binary(Bin,N)			bif_split_binary2
erlang:binary_to_term(Bin)			bif_binary_to_term1
erlang:term_to_binary(Bin)			bif_term_to_binary1
erlang:binary_to_list(Bin,Beg,End)	bif_binary_to_list3
erlang:list_to_binary(Bin)			bif_list_to_binary1
erlang:tuple_to_list(Tuple)			bif_tuple_to_list1
erlang:list_to_tuple(List)			bif_list_to_tuple1
#erlang:integer_to_list(N)			bif_integer_to_list1
erlang:float_to_list(N)				bif_float_to_list1
#erlang:list_to_integer(Chars)		bif_list_to_integer1
erlang:list_to_float(Chars)			bif_list_to_float1
erlang:make_tuple(N,InitVal)		bif_make_tuple2
erlang:append_element(Tuple,Elem)	bif_append_element2

erlang:prp_triple(PidRefPort)		bif_prp_triple1

erlang:phash(Term,Range)			bif_phash2

erlang:register(RegName,Pid)		bif_register2
erlang:unregister(RegName)			bif_unregister1
erlang:whereis(RegName)				bif_whereis1
erlang:registered()					bif_registered0
erlang:node(PidRefPort)				bif_node1
erlang:node()						bif_node0

erlang:set_node(Node)				bif_set_node1
erlang:is_local_node(Node)			bif_is_local_node1

erlang:open_port(Term,Options)			bif_open_port2
erlang:set_port_option(Port,Opt,Value)	bif_set_port_option3
erlang:ports()							bif_ports0
erlang:close_port(Port)					bif_close_port1

erlang:process_info(Pid,What)		bif_process_info2
erlang:port_info(Port,What)			bif_port_info2
erlang:process_flag(Pid,What,Value)	bif_process_flag3
erlang:garbage_collect()			bif_garbage_collect0
erlang:garbage_collect(Pid)			bif_garbage_collect1
erlang:get_stacktrace0(Pid)			bif_get_stacktrace0_1
erlang:get_locals(Pid)				bif_get_locals1

erlang:now()						bif_now0
erlang:date()						bif_date0
erlang:time()						bif_time0
erlang:localtime()					bif_localtime0
erlang:universaltime()				bif_universaltime0

# dictionary access
erlang:get()						bif_get0
erlang:put(Dict)					bif_put1

erlang:make_ref()					bif_make_ref0

erlang:make_ref(Node,Serial,Creation)		bif_make_ref3
erlang:make_pid(Node,Serial,Creation)		bif_make_pid3
erlang:make_port(Node,Serial,Creation)		bif_make_port3

erlang:daemonize()					bif_daemonize0

#
#	file
#

file:open0(FileName,Mode,Perms)		bif_open0_3
file:read0(Port,Len)				bif_read0_2
file:write0(Port,Bin)				bif_write0_2

file:delete(Path)					bif_delete1
file:rename(Src,Dst)				bif_rename2

file:set_cwd(Dir)					bif_set_cwd1
file:get_cwd()						bif_get_cwd0
file:make_dir(Dir)					bif_make_dir1
file:del_dir(Dir)					bif_del_dir1

file:list_dir(Dir)					bif_list_dir1
file:list_dir2(Dir)					bif_list_dir2_1
file:list_dir3_0(Dir)				bif_list_dir3_0_1

file:read_file_info0(Filename)		bif_read_file_info0_1

#
#	inet
#
inet:getaddrs0(Addr,Family)			bif_getaddrs0_2

#
#	gen_tcp
#
gen_tcp:connect_socket(RemIP,RemPort,LocIP,LocPort)		bif_connect_socket4
gen_tcp:listen_socket(LocIP,LocPort)					bif_listen_socket2
gen_tcp:controlling_process(Sock,Pid)					bif_controlling_process2
gen_tcp:close(Sock)										bif_close1

#
#	gen_udp
#
gen_udp:open_socket(LocIP,LocPort)			bif_open_socket2
gen_udp:sendto(Sock,RemIP,RemPort,Packet)	bif_sendto4

#
#	breakpoints - use interpreter instead
#

#x:b1()		bif_b1_0
#x:b2()		bif_b2_0
#x:b3()		bif_b3_0
#x:b4()		bif_b4_0

#code:set_brk0(Mod,Off)		  bif_set_brk0_2
#code:unset_brk0(Mod,Off)	  bif_unset_brk0_2
#code:toggle_brk0(Mod,Off)	  bif_toggle_brk0_2
#code:clear_brks0()			  bif_clear_brks0_0

#
#	crypto functions
#
#	Use of apr_md5... requires apr-iconv lib
#
crypto:md5_init()					bif_md5_init0
crypto:md5_update(Data,Context)		bif_md5_update2
crypto:md5_final(Context)			bif_md5_final1
crypto:md5(Data)					bif_md5_1

crypto:sha1_init()					bif_sha1_init0
crypto:sha1_update(Data,Context)	bif_sha1_update2
crypto:sha1_final(Context)			bif_sha1_final1
crypto:sha1(Data)					bif_sha1_1

crypto:rc4_init(Key)				bif_rc4_init1
crypto:rc4_update(Text,Opaque)		bif_rc4_update2

#
#	os
#
os:type				bif_type0
