System x requirements

System is a network of interconnected cells

Each cells runs on a computer. A single computer may run several cells simultaneously. The computer which runs a cell is called its host


Inspector

Inspector is a frontend application that may be connected to any active cell yet provide access to all cells.

1. Inspector should run in an Internet browser and should not require a specific software on a client machine.

2. Inspector should collect and display information about any known cells. The information about cell status should include at least the following:

- cell name
- host name
- host ip
- security level
- uptime
- vm version

3. Any cell should be selectable as a current cell. Most of the command will be applied to the current cell.

Information store

There should be an information store which has information about various hosts with their most critical parameters, such as filesystem tree, network interfaces, processes running, etc. After a ls-laR command is run on a new host the obtained data is kept centrally to allow browsing of the filesystem contents, etc without network traffic. Hosts may become inaccessible and the data should be kept for analysis.

The information store may request the information update if a cell is active on the host.

Cell commands

1. Browse file system of the host. The contents of the current directory may be collected or the whole directory tree may be examined. The information obtained should be cached to the Store.

2. Manipulate file system of the host. Add and remove files and directories on the host.

3. Inspect running processes of the host. Get a list of running processes on the host. OS-dependent. Running 'ps' on Linux, and something else on Windows. Cached to the Store.

4. Run/kill programs on the host. Any program may be killed on the host. OS-dependent. For running programs, one possibility is to execute the program with a specified standard input and capture its standard outputs. Other possibility is running an interactive program. Currently only programs which do not require terminal should be allowed.

5. Initiate TCP connections from the host. The open TCP connection may act as a pipe and its originating end should be to a client software such as telnet, ssh or rsh clients. All clients should be represented in Inspector. No outside clients are envisioned. No port-forwarding pipes too.

6. Emulate a terminal on the host. Do I need this?

7. Search file system of the host. The cached version of the filesystem contents is searched.

8. Search files on the host. A local copy or an actual file is searched for a pattern.

9. Edit text documents on the host. A document is downloaded, edited and then sent back. A file viewing operation is separate and most of the time it will display a local copy of the file.

10. Edit binary files on the host. A binary edits are different from text edits. The file is downloaded and cached. Then it is examined and if the user decides that a few bytes may need a change, a request to change only these several bytes is sent to the cell.

11. Manipulate file permissions on the host. The user should be able to change permissions on the file as well as its creation and modification times. Most of the time this will not be needed as the system will preserve the file attributes when a file is updated.

12. Perform actions using admin priviledges. Many actions described here would require root priviledges. The cell shall temporarily set root priviledges to its process to perform them.

13. Copy files from one node to another

14. Peform port scanning from a host


Deployment and Bootstraping

1. Hibernate the cell and survive the host reboot


Upgrade

1. Update or add new x module on the host

2. Upgrade or fix virtual machine


Connections

1. Establish STUN connections from inside the firewall or NAT


Remarks/suggestions

* There is no need to compile a module within a cell. The cell software may lack the whole compiler. It may contain scanner and parser but not for instance x_codegen

* Is there a way to run a vim in a terminal on a remote host?

* What about complex client software? Is it possible to have an Oracle client to be implemented in Erlang?

* How to temporarily set root priviledges?
