
is_integer		(t -> b)
is_bignum		(t -> b)
is_atom			(t -> b)
is_boolean		(t -> b)
is_float		(t -> b)
is_function		(t -> b)
is_function2	(f n -> b)
is_number		(t -> b)
is_pid			(t -> b)
is_port			(t -> b)
is_record		(t a n -> b)
is_reference	(t -> b)
is_cons			(t -> b)
is_nil			(t -> b)
is_list			(t -> b)
is_tuple		(t -> b)
is_tuple_of_arity	arity/n		(t -> b)
is_binary		(t -> b)

dup					(t -> t t)
swap				(t t -> t t)
drop		n/n		(* -> )

reset_msgs		(timeout -> )
get_msg			expired/label	( -> msg | )
drop_msg		( -> )
send_msg		(rcpt msg -> msg)

get_arg			ano/n	( -> t)
clear_arg		ano/n	( -> t)
set_arg			ano/n	(t -> )
push_args		n/n		(* -> )
set_args		n/n		(* -> )

get_var			vno/n	( -> t)
clear_var		vno/n	( -> t)
set_var			vno/n	(t -> )

jump_if_not		l/label		(b -> )
jump_if			l/label		(b -> )
jump			l/label		( -> # | )

catch			l/label		( -> | class reason)
drop_catch					( -> )
raise			(class reason -> #)

lit				t/term		( -> t)

car				(t -> t)
cdr				(t -> t)
make_cons		(t t -> t)
make_cons_nil	(t -> t)
list_copy		(t -> t)
list_append		(t t -> t)
list_subtract	(t t -> t)

pack_tuple		arity/n		(* -> t)
unpack_tuple	arity/n		(t -> *)
tuple_elem		index/n		(t -> t)

beg_bin			( -> )
end_bin			( -> t)

bin_add_i_b		unit/n	(v sz -> )
bin_add_i_l		unit/n	(v sz -> )
bin_add_i_n		unit/n	(v sz -> )
bin_add_f_b		unit/n	(v sz -> )
bin_add_f_l		unit/n	(v sz -> )
bin_add_f_n		unit/n	(v sz -> )
bin_add_b		unit/n	(v sz -> )

bin_fetch_start		(t -> )
is_bin_consumed		( -> b)
bin_get_context		( -> t)

bin_size_is				(bin sz -> b)
bin_size_is_at_least	(bin sz -> b)

bin_fetch_i_u_b		unit/n	(sz -> t)
bin_fetch_i_u_l		unit/n	(sz -> t)		
bin_fetch_i_u_n		unit/n	(sz -> t)
bin_fetch_i_s_b		unit/n	(sz -> t)
bin_fetch_i_s_l		unit/n	(sz -> t)
bin_fetch_i_s_n		unit/n	(sz -> t)
bin_fetch_f_b		unit/n	(sz -> t)
bin_fetch_f_l		unit/n	(sz -> t)
bin_fetch_f_n		unit/n	(sz -> t)
bin_fetch_bin		unit/n	(sz -> t)

self			( -> t)

enter		n/n		( -> )
leave				( -> )
ret			n/n		(t -> #)

addi		i/n		(t -> t)
subi		i/n		(t -> t)

add		(t t -> t)
sub		(t t -> t)
or		(t t -> t)
bor		(t t -> t)
xor		(t t -> t)
bxor	(t t -> t)
bsl		(t t -> t)
bsr		(t t -> t)
mult	(t t -> t)
div		(t t -> t)
idiv	(t t -> t)
rem		(t t -> t)
and		(t t -> t)
band	(t t -> t)
equal	(t t -> t)
neq		(t t -> t)
lesseq	(t t -> t)
less	(t t -> t)
moreeq	(t t -> t)
more	(t t -> t)
exeq	(t t -> t)
nexeq	(t t -> t)
not		(t -> t)
bnot	(t -> t)
negate	(t -> t)

equal_to			t/term		(t -> b)
neq_to				t/term		(t -> b)
lesseq_than			t/term		(t -> b)
less_than			t/term		(t -> b)
moreeq_than			t/term		(t -> b)
more_than			t/term		(t -> b)

bif_call0			entry/e0	( -> t)
bif_call1			entry/e1	(t -> t)
bif_call2			entry/e2	(t t -> t)
bif_call3			entry/e3	(t t t -> t)
bif_call4			entry/e4	(t t t t -> t)

call				l/label		( -> t | )
tail_call			l/label		( -> # | )

call_far			amod,afun,n/mfn		( -> t)
tail_call_far		amod,afun,n/mfn		( -> #)

apply		(m f a -> t)
apply2		(m f a -> t)

apply_fun	(fun args -> t)

level				n/n		( -> )
rlevel				n/n		( -> )

nop			( -> )
break		( -> #)
