
CC			= cl.exe
LINK		= link.exe
LIBR		= lib.exe

INCLUDES	= /I xvm /I include /I include/apr /I include/aprutil
CCOPTS		= /nologo /MDd /W3 /Gm /EHsc /Zi /Od /Fo$B/ \
			  $(INCLUDES) \
			  /D WIN32 /D APR_DECLARE_STATIC /D APU_DECLARE_STATIC
LDOPTS		= /nologo /debug /subsystem:console /incremental:no \
			  /nodefaultlib:msvcrt
APRLIBS		= lib/apr-1.lib \
			  lib/aprutil-1.lib
STDLIBS		= kernel32.lib advapi32.lib ws2_32.lib wsock32.lib \
			  ole32.lib shell32.lib rpcrt4.lib

ERLC		= "C:\Program Files\erl5.6\bin\erlc.exe"
ERL			= "C:\Program Files\erl5.6\bin\erl.exe"
#ERLC		= "C:\user\mk\erl5.6\bin\erlc.exe"
#ERL		= "C:\user\mk\erl5.6\bin\erl.exe"

B			= bin
E			= ebin
X			= xbin
U			= util
C			= compiler
V			= xvm
S			= stdmod
P			= snip
F			= bif

BIFTAB		= spec/biftab.txt
OPTAB		= spec/optab2.txt
ATOMTAB		= spec/atoms.lst

UTIL		= $E/vmgen.beam \
			  $E/opsgen2.beam \
			  $E/aegen.beam

COMPILER	= $E/x_compile.beam \
			  $E/x_kernel.beam \
			  $E/x_codegen.beam \
			  $E/x_asmopt.beam \
			  $E/x_asm2.beam \
			  $E/bif.beam \
			  $E/ops.beam \
			  $E/x_disasm2.beam

SNIP		= $P/arith.c $P/binary.c $P/compare.c $P/jump.c \
			  $P/list.c $P/literal.c $P/msg.c $P/recog.c \
			  $P/stack.c $P/vararg.c

OBJ			= $B/atom.obj \
			  $B/atom_cache.obj \
			  $B/bignum.obj \
			  $B/bits.obj \
			  $B/buffer.obj \
			  $B/code_base.obj \
			  $B/cstr.obj \
			  $B/errors.obj \
			  $B/exterm.obj \
			  $B/hash.obj \
			  $B/md5.obj \
			  $B/sha1.obj \
			  $B/lit_pool.obj \
			  $B/msg_queue.obj \
			  $B/teeterl.obj \
			  $B/port.obj \
			  $B/port_listener.obj \
			  $B/port_pipe.obj \
			  $B/port_file.obj \
			  $B/port_socket.obj \
			  $B/port_udp.obj \
			  $B/run_code.obj \
			  $B/tcomp.obj \
			  $B/term.obj \
			  $B/xpool.obj \
			  $B/bif_erlang.obj \
			  $B/bif_lists.obj \
			  $B/bif_code.obj \
			  $B/bif_io.obj \
			  $B/bif_inet.obj \
			  $B/bif_file.obj \
			  $B/bif_gen_tcp.obj \
			  $B/bif_gen_udp.obj \
			  $B/bif_crypto.obj \
			  $B/bif_os.obj

PREX		= $X/prim_erlang.cx \
			  $X/init.cx \
			  $X/code.cx \
			  $X/error_handler.cx \
			  $X/queue.cx

STDX		= $X/lists.cx \
			  $X/erlang.cx \
			  $X/gen_tcp.cx \
			  $X/gen_udp.cx \
			  $X/inet.cx \
			  $X/file.cx \
			  $X/filename.cx \
			  $X/string.cx \
			  $X/regexp.cx \
			  $X/random.cx \
			  $X/file_io_srv.cx \
			  $X/stdio.cx \
			  $X/io.cx \
			  $X/io_lib.cx \
			  $X/io_lib_format.cx \
			  $X/io_lib_fread.cx \
			  $X/io_lib_pretty.cx \
			  $X/erl_scan.cx \
			  $X/erl_parse.cx \
			  $X/erl_eval.cx \
			  $X/erl_pp.cx \
			  $X/erl_lint.cx \
			  $X/erl_internal.cx \
			  $X/erl_expand_records.cx \
			  $X/erl_bits.cx \
			  $X/eval_bits.cx \
			  $X/proplists.cx \
			  $X/ordsets.cx \
			  $X/gb_sets.cx \
			  $X/gb_trees.cx \
			  $X/sets.cx \
			  $X/sofs.cx \
			  $X/dict.cx \
			  $X/orddict.cx \
			  $X/epp.cx \
			  $X/packages.cx \
			  $X/netmesh.cx \
			  $X/netudp.cx \
			  $X/nettcp.cx \
			  $X/rpc.cx \
			  $X/x_internal.cx \
			  $X/crypto.cx

COMPX		= $X/x_compile.cx \
			  $X/x_kernel.cx \
			  $X/x_codegen.cx \
			  $X/x_asmopt.cx \
			  $X/x_asm2.cx \
			  $X/bif.cx \
			  $X/ops.cx \
			  $X/x_disasm2.cx \
			  $X/core_lib.cx \
			  $X/erl_bifs.cx \
			  $X/sys_core_fold.cx \
			  $X/sys_core_inline.cx \
			  $X/sys_pre_expand.cx \
			  $X/v3_core.cx \
			  $X/appgen.cx

XOBJ		= $B/prim_erlang.obj \
			  $B/init.obj \
			  $B/code.obj \
			  $B/error_handler.obj \
			  $B/queue.obj \
			  $B/lists.obj \
			  $B/erlang.obj \
			  $B/gen_tcp.obj \
			  $B/gen_udp.obj \
			  $B/inet.obj \
			  $B/file.obj \
			  $B/filename.obj \
			  $B/string.obj \
			  $B/regexp.obj \
			  $B/random.obj \
			  $B/file_io_srv.obj \
			  $B/stdio.obj \
			  $B/io.obj \
			  $B/io_lib.obj \
			  $B/io_lib_format.obj \
			  $B/io_lib_fread.obj \
			  $B/io_lib_pretty.obj \
			  $B/erl_scan.obj \
			  $B/erl_parse.obj \
			  $B/erl_eval.obj \
			  $B/erl_pp.obj \
			  $B/erl_lint.obj \
			  $B/erl_internal.obj \
			  $B/erl_expand_records.obj \
			  $B/erl_bits.obj \
			  $B/eval_bits.obj \
			  $B/proplists.obj \
			  $B/ordsets.obj \
			  $B/gb_sets.obj \
			  $B/gb_trees.obj \
			  $B/sets.obj \
			  $B/sofs.obj \
			  $B/dict.obj \
			  $B/orddict.obj \
			  $B/epp.obj \
			  $B/packages.obj \
			  $B/netmesh.obj \
			  $B/netudp.obj \
			  $B/nettcp.obj \
			  $B/rpc.obj \
			  $B/x_internal.obj \
			  $B/x_compile.obj \
			  $B/x_kernel.obj \
			  $B/x_codegen.obj \
			  $B/x_asmopt.obj \
			  $B/x_asm2.obj \
			  $B/bif.obj \
			  $B/ops.obj \
			  $B/x_disasm2.obj \
			  $B/core_lib.obj \
			  $B/erl_bifs.obj \
			  $B/sys_core_fold.obj \
			  $B/sys_core_inline.obj \
			  $B/sys_pre_expand.obj \
			  $B/v3_core.obj \
			  $B/appgen.obj \
			  $B/crypto.obj

$C/bif.erl:	$E/vmgen.beam $(BIFTAB)
	$(ERL) -pa $E -run vmgen bif_tab $(BIFTAB) $C/bif.erl -run init stop -noshell

$C/ops.erl:	$E/opsgen2.beam $(OPTAB)
	$(ERL) -pa $E -run opsgen2 file $(OPTAB) $C/ops.erl -run init stop -noshell

$V/bif.h $V/builtins.inc:	$E/vmgen.beam $(BIFTAB)
	$(ERL) -pa $E -run vmgen bif_list $(BIFTAB) $V/bif.h $V/builtins.inc -run init stop -noshell

$V/atom_defs.h $V/atoms.inc:	$E/aegen.beam $(ATOMTAB) $(BIFTAB)
	$(ERL) -pa $E -run aegen compile_atoms $(ATOMTAB) $(BIFTAB) $V/atom_defs.h $V/atoms.inc -run init stop -noshell

$V/run_cases.inc:	$E/vmgen.beam $(SNIP)
	$(ERL) -pa $E -run vmgen run_cases $V/run_cases.inc $(SNIP) -run init stop -noshell

$V/modbin.h $V/premods.inc $V/stdmods.inc $V/compmods.inc:		$E/vmgen.beam
	$(ERL) -pa $E -run vmgen declmods $V/modbin.h $(PREX) $(STDX) $(COMPX) -run init stop -noshell
	$(ERL) -pa $E -run vmgen addmods $V/premods.inc $(PREX) -run init stop -noshell
	$(ERL) -pa $E -run vmgen addmods $V/stdmods.inc $(STDX) -run init stop -noshell
	$(ERL) -pa $E -run vmgen addmods $V/compmods.inc $(COMPX) -run init stop -noshell

$B/code_base.obj:	$V/code_base.c $V/bif.h $V/builtins.inc $V/atom_defs.h
	$(CC) /c $(CCOPTS) $V/code_base.c

$B/run_code.obj:	$V/run_code.c $V/run_cases.inc $V/atom_defs.h
	$(CC) /c $(CCOPTS) $V/run_code.c

$B/atom.obj:	$V/atom.c $V/atoms.inc $V/atom_defs.h
	$(CC) /c $(CCOPTS) $V/atom.c

$B/teeterl.obj:	$V/modbin.h $V/premods.inc $V/stdmods.inc $V/compmods.inc
	$(CC) /c $(CCOPTS) $V/teeterl.c

$(STDX):	$(COMPILER)

$(PREX):	$(COMPILER)

$(OBJ): 	$V/atom_defs.h

$B/teeterl.lib:	$(OBJ) $(XOBJ)
	$(LIBR) /out:$B/teeterl.lib $(OBJ) $(XOBJ)

$B/exec.exe:	$B/exec.obj $B/teeterl.lib
	$(LINK) $(LDOPTS) /out:"$@" $B/exec.obj $B/teeterl.lib $(APRLIBS) $(STDLIBS)

all:		$(PREX) $(STDX) $(COMPX) $(XOBJ) $B/teeterl.lib $B/exec.exe

.SUFFIXES:: .erl .c .cx

{$U}.erl{$E}.beam::
	$(ERLC) -o $E $<

{$C}.erl{$E}.beam::
	$(ERLC) -o $E $<

{$S}.erl{$X}.cx::
	$(ERL) -pa $E -run x_compile files $< $X -run init stop -noshell

{$C}.erl{$X}.cx::
	$(ERL) -pa $E -run x_compile files $< $X -run init stop -noshell

{$F}.c{$B}.obj::
	$(CC) /c $(CCOPTS) $<

{$X}.cx{$B}.obj::
	$(CC) /c $(CCOPTS) /TC $<

{$V}.c{$B}.obj::
	$(CC) /c $(CCOPTS) $<

{$C}.c{$B}.obj::
	$(CC) /c $(CCOPTS) $<

# EOF
